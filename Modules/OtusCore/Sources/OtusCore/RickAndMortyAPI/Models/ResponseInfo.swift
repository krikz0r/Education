//
// ResponseInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель, описывающая информацию о страницах в ответе. */
public struct ResponseInfo: Codable, Hashable {

    /** Общее количество элементов */
    public var count: Int?
    /** Общее количество страниц */
    public var pages: Int?
    /** URL следующей страницы */
    public var next: String?
    /** URL предыдущей страницы */
    public var prev: String?

    public init(count: Int? = nil, pages: Int? = nil, next: String? = nil, prev: String? = nil) {
        self.count = count
        self.pages = pages
        self.next = next
        self.prev = prev
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case count
        case pages
        case next
        case prev
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(pages, forKey: .pages)
        try container.encodeIfPresent(next, forKey: .next)
        try container.encodeIfPresent(prev, forKey: .prev)
    }
}

